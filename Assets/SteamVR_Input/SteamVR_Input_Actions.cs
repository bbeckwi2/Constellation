//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Pose p_default_lPose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Single p_default_lTriggerPull;
        
        private static SteamVR_Action_Single p_default_rTriggerPull;
        
        private static SteamVR_Action_Pose p_default_rPose;
        
        private static SteamVR_Action_Boolean p_default_rTrackTouch;
        
        private static SteamVR_Action_Boolean p_default_rTrackClick;
        
        private static SteamVR_Action_Vector2 p_default_rTrackPos;
        
        private static SteamVR_Action_Boolean p_default_lTrackTouch;
        
        private static SteamVR_Action_Boolean p_default_lTrackClick;
        
        private static SteamVR_Action_Vector2 p_default_lTrackPos;
        
        private static SteamVR_Action_Boolean p_default_lSelect;
        
        private static SteamVR_Action_Boolean p_default_rSelect;
        
        private static SteamVR_Action_Boolean p_default_menuPush;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_lPose
        {
            get
            {
                return SteamVR_Actions.p_default_lPose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_lTriggerPull
        {
            get
            {
                return SteamVR_Actions.p_default_lTriggerPull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single default_rTriggerPull
        {
            get
            {
                return SteamVR_Actions.p_default_rTriggerPull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Pose default_rPose
        {
            get
            {
                return SteamVR_Actions.p_default_rPose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean default_rTrackTouch
        {
            get
            {
                return SteamVR_Actions.p_default_rTrackTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_rTrackClick
        {
            get
            {
                return SteamVR_Actions.p_default_rTrackClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_rTrackPos
        {
            get
            {
                return SteamVR_Actions.p_default_rTrackPos.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_lTrackTouch
        {
            get
            {
                return SteamVR_Actions.p_default_lTrackTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_lTrackClick
        {
            get
            {
                return SteamVR_Actions.p_default_lTrackClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_lTrackPos
        {
            get
            {
                return SteamVR_Actions.p_default_lTrackPos.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_lSelect
        {
            get
            {
                return SteamVR_Actions.p_default_lSelect.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_rSelect
        {
            get
            {
                return SteamVR_Actions.p_default_rSelect.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_menuPush
        {
            get
            {
                return SteamVR_Actions.p_default_menuPush.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_lPose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_lTriggerPull,
                    SteamVR_Actions.default_rTriggerPull,
                    SteamVR_Actions.default_rPose,
                    SteamVR_Actions.default_rTrackTouch,
                    SteamVR_Actions.default_rTrackClick,
                    SteamVR_Actions.default_rTrackPos,
                    SteamVR_Actions.default_lTrackTouch,
                    SteamVR_Actions.default_lTrackClick,
                    SteamVR_Actions.default_lTrackPos,
                    SteamVR_Actions.default_lSelect,
                    SteamVR_Actions.default_rSelect,
                    SteamVR_Actions.default_menuPush,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_lPose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_lTriggerPull,
                    SteamVR_Actions.default_rTriggerPull,
                    SteamVR_Actions.default_rPose,
                    SteamVR_Actions.default_rTrackTouch,
                    SteamVR_Actions.default_rTrackClick,
                    SteamVR_Actions.default_rTrackPos,
                    SteamVR_Actions.default_lTrackTouch,
                    SteamVR_Actions.default_lTrackClick,
                    SteamVR_Actions.default_lTrackPos,
                    SteamVR_Actions.default_lSelect,
                    SteamVR_Actions.default_rSelect,
                    SteamVR_Actions.default_menuPush};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_lPose,
                    SteamVR_Actions.default_rPose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_rTrackTouch,
                    SteamVR_Actions.default_rTrackClick,
                    SteamVR_Actions.default_lTrackTouch,
                    SteamVR_Actions.default_lTrackClick,
                    SteamVR_Actions.default_lSelect,
                    SteamVR_Actions.default_rSelect,
                    SteamVR_Actions.default_menuPush};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_lTriggerPull,
                    SteamVR_Actions.default_rTriggerPull};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_rTrackPos,
                    SteamVR_Actions.default_lTrackPos};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_lTriggerPull,
                    SteamVR_Actions.default_rTriggerPull,
                    SteamVR_Actions.default_rTrackTouch,
                    SteamVR_Actions.default_rTrackClick,
                    SteamVR_Actions.default_rTrackPos,
                    SteamVR_Actions.default_lTrackTouch,
                    SteamVR_Actions.default_lTrackClick,
                    SteamVR_Actions.default_lTrackPos,
                    SteamVR_Actions.default_lSelect,
                    SteamVR_Actions.default_rSelect,
                    SteamVR_Actions.default_menuPush};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_lPose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/lPose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_lTriggerPull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/lTriggerPull")));
            SteamVR_Actions.p_default_rTriggerPull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/rTriggerPull")));
            SteamVR_Actions.p_default_rPose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/rPose")));
            SteamVR_Actions.p_default_rTrackTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/rTrackTouch")));
            SteamVR_Actions.p_default_rTrackClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/rTrackClick")));
            SteamVR_Actions.p_default_rTrackPos = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/rTrackPos")));
            SteamVR_Actions.p_default_lTrackTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/lTrackTouch")));
            SteamVR_Actions.p_default_lTrackClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/lTrackClick")));
            SteamVR_Actions.p_default_lTrackPos = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/lTrackPos")));
            SteamVR_Actions.p_default_lSelect = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/lSelect")));
            SteamVR_Actions.p_default_rSelect = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/rSelect")));
            SteamVR_Actions.p_default_menuPush = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/menuPush")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
