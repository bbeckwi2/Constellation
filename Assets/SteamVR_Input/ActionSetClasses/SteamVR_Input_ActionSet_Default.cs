//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public class SteamVR_Input_ActionSet_default : Valve.VR.SteamVR_ActionSet
    {
        
        public virtual SteamVR_Action_Boolean InteractUI
        {
            get
            {
                return SteamVR_Actions.default_InteractUI;
            }
        }
        
        public virtual SteamVR_Action_Pose lPose
        {
            get
            {
                return SteamVR_Actions.default_lPose;
            }
        }
        
        public virtual SteamVR_Action_Skeleton SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.default_SkeletonLeftHand;
            }
        }
        
        public virtual SteamVR_Action_Skeleton SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.default_SkeletonRightHand;
            }
        }
        
        public virtual SteamVR_Action_Single Squeeze
        {
            get
            {
                return SteamVR_Actions.default_Squeeze;
            }
        }
        
        public virtual SteamVR_Action_Boolean HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.default_HeadsetOnHead;
            }
        }
        
        public virtual SteamVR_Action_Single lTriggerPull
        {
            get
            {
                return SteamVR_Actions.default_lTriggerPull;
            }
        }
        
        public virtual SteamVR_Action_Single rTriggerPull
        {
            get
            {
                return SteamVR_Actions.default_rTriggerPull;
            }
        }
        
        public virtual SteamVR_Action_Pose rPose
        {
            get
            {
                return SteamVR_Actions.default_rPose;
            }
        }
        
        public virtual SteamVR_Action_Boolean rTrackTouch
        {
            get
            {
                return SteamVR_Actions.default_rTrackTouch;
            }
        }
        
        public virtual SteamVR_Action_Boolean rTrackClick
        {
            get
            {
                return SteamVR_Actions.default_rTrackClick;
            }
        }
        
        public virtual SteamVR_Action_Vector2 rTrackPos
        {
            get
            {
                return SteamVR_Actions.default_rTrackPos;
            }
        }
        
        public virtual SteamVR_Action_Boolean lTrackTouch
        {
            get
            {
                return SteamVR_Actions.default_lTrackTouch;
            }
        }
        
        public virtual SteamVR_Action_Boolean lTrackClick
        {
            get
            {
                return SteamVR_Actions.default_lTrackClick;
            }
        }
        
        public virtual SteamVR_Action_Vector2 lTrackPos
        {
            get
            {
                return SteamVR_Actions.default_lTrackPos;
            }
        }
        
        public virtual SteamVR_Action_Boolean lSelect
        {
            get
            {
                return SteamVR_Actions.default_lSelect;
            }
        }
        
        public virtual SteamVR_Action_Boolean rSelect
        {
            get
            {
                return SteamVR_Actions.default_rSelect;
            }
        }
        
        public virtual SteamVR_Action_Boolean menuPush
        {
            get
            {
                return SteamVR_Actions.default_menuPush;
            }
        }
        
        public virtual SteamVR_Action_Vibration Haptic
        {
            get
            {
                return SteamVR_Actions.default_Haptic;
            }
        }
    }
}
